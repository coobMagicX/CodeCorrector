Intent: The intent of the test case `assertEquals(StringUtils.replaceEach("aba", new String[]{"a", "b"}, new String[]{"c", null}),"cbc");` is to evaluate the behavior of the `replaceEach` function when one of the elements in the replacement array is `null`. It checks if the function can handle `null` values properly by leaving the corresponding matches in the source string unaltered, effectively replacing "a" with "c" and leaving "b" as it is.

Repair strategy: To address the failure of this test case, adjust the `replaceEach` method to correctly handle `null` values in the `replacementList` array. This involves ensuring that when a `null` value is encountered in the `replacementList`, the corresponding substring in `text` identified by `searchList` should remain unchanged. This can be achieved by modifying the part of the code where replacements are appended to the `StringBuilder` (`buf`). If `replacementList[replaceIndex]` is `null`, append `searchList[replaceIndex]` instead of `replacementList[replaceIndex]`. This ensures that the original text segment is retained in the output.