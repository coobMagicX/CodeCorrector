Intent: The test case `testSingleVariableAndConstraint()` is designed to confirm that the `SimplexSolver` correctly optimizes a linear objective function subject to a single linear constraint. The test expects the solution to maximize the objective function under the given constraint, verifying both the optimal point and the maximum value of the function.

Repair strategy: The error suggests that the `getBasicRow()` method in the source code might be incorrectly identifying the basic row, which is crucial for the simplex algorithm's pivot operations. The method is intended to find a unique row with a non-zero entry in a specified column (except the rows corresponding to the objective functions). The `null` return instead of the expected unique row index might be causing incorrect pivoting or tableau adjustments in the solver. To fix this, review and adjust the logic in `getBasicRow()`:
1. Ensure that it accurately detects and returns the correct row when exactly one non-zero entry exists in the specified column.
2. Verify the conditions under which `null` is returned to confirm it aligns with the expected behavior of having more than one non-zero entry, which indicates multiple candidates for the pivot row, leading to ambiguity or degeneracy in the simplex tableau.
3. Consider the implications of precision and rounding errors by examining the use of `epsilon` in comparisons, ensuring it is correctly configured to handle small numerical discrepancies without causing logical errors in row selection.