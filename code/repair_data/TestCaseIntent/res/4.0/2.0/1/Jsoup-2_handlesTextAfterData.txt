Intent: The test case 'handlesTextAfterData' is intended to verify that the parser correctly handles text segments both before and after a script element within an HTML body. The parser should maintain the text as part of the body element, ensuring that text nodes are correctly created and appended around the script tag.

Repair strategy: The issue may lie in how text nodes are managed after the processing of a script tag or any data tag that might modify how text is parsed immediately following it. The test failure suggests that the text following the script tag (" aft") is not being parsed or added correctly to the document tree. A possible repair strategy would be to inspect and potentially modify how the parseStartTag method handles the transition from parsing a data-containing tag like <script> back to parsing regular text. This could involve ensuring that the tokenizer state is correctly reset or that text-consuming methods are properly invoked after exiting a script or data tag.