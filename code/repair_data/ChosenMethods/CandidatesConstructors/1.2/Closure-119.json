{"GlobalNamespace": "  GlobalNamespace(AbstractCompiler compiler, Node externsRoot, Node root) {\n    this.compiler = compiler;\n    this.externsRoot = externsRoot;\n    this.root = root;\n  }", "AstChange": "    AstChange(JSModule module, Scope scope, Node node) {\n      this.module = module;\n      this.scope = scope;\n      this.node = node;\n    }", "BuildGlobalNamespace": "    BuildGlobalNamespace() {\n    }", "Name": "    Name(String name, Name parent, boolean inExterns) {\n      this.baseName = name;\n      this.parent = parent;\n      this.type = Type.OTHER;\n      this.inExterns = inExterns;\n    }", "Ref": "    private Ref(Type type, int index) {\n      this.type = type;\n      this.module = null;\n      this.source = null;\n      this.scope = null;\n      this.name = null;\n      this.preOrderIndex = index;\n    }", "Tracker": "    Tracker(AbstractCompiler compiler, PrintStream stream,\n        Predicate<String> isInterestingSymbol) {\n      this.compiler = compiler;\n      this.stream = stream;\n      this.isInterestingSymbol = isInterestingSymbol;\n    }"}