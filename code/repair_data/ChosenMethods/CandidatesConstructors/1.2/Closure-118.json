{"Property": "    Property(String name) {\n      this.name = name;\n    }", "DisambiguateProperties": "  private DisambiguateProperties(AbstractCompiler compiler,\n      TypeSystem<T> typeSystem, Map<String, CheckLevel> propertiesToErrorFor) {\n    this.compiler = compiler;\n    this.typeSystem = typeSystem;\n    this.propertiesToErrorFor = propertiesToErrorFor;\n    if (!this.propertiesToErrorFor.isEmpty()) {\n      this.invalidationMap = LinkedHashMultimap.create();\n    } else {\n      this.invalidationMap = null;\n    }\n  }", "JSTypeSystem": "    public JSTypeSystem(AbstractCompiler compiler) {\n      registry = compiler.getTypeRegistry();\n      invalidatingTypes = Sets.newHashSet(\n          registry.getNativeType(JSTypeNative.ALL_TYPE),\n          registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),\n          registry.getNativeType(JSTypeNative.NO_TYPE),\n          registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),\n          registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),\n          registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),\n          registry.getNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE),\n          registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));\n\n    }", "ConcreteTypeSystem": "    public ConcreteTypeSystem(TightenTypes tt, CodingConvention convention) {\n      this.tt = tt;\n      this.codingConvention = convention;\n    }"}