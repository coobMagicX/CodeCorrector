{"ZipFile": "    public ZipFile(File f, String encoding, boolean useUnicodeExtraFields)\n        throws IOException {\n        this.archiveName = f.getAbsolutePath();\n        this.encoding = encoding;\n        this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n        this.useUnicodeExtraFields = useUnicodeExtraFields;\n        archive = new RandomAccessFile(f, \"r\");\n        boolean success = false;\n        try {\n            Map<ZipArchiveEntry, NameAndComment> entriesWithoutUTF8Flag =\n                populateFromCentralDirectory();\n            resolveLocalFileHeaderData(entriesWithoutUTF8Flag);\n            success = true;\n        } finally {\n            if (!success) {\n                try {\n                    closed = true;\n                    archive.close();\n                } catch (IOException e2) { // NOPMD\n                    // swallow, throw the original exception instead\n                }\n            }\n        }\n    }", "BoundedInputStream": "        BoundedInputStream(long start, long remaining) {\n            this.remaining = remaining;\n            loc = start;\n        }", "NameAndComment": "        private NameAndComment(byte[] name, byte[] comment) {\n            this.name = name;\n            this.comment = comment;\n        }"}