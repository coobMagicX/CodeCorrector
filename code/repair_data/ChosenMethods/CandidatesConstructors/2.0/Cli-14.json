{"GroupImpl": "    public GroupImpl(final List options,\n                     final String name,\n                     final String description,\n                     final int minimum,\n                     final int maximum) {\n        super(0, false);\n\n        this.name = name;\n        this.description = description;\n        this.minimum = minimum;\n        this.maximum = maximum;\n\n        // store a copy of the options to be used by the\n        // help methods\n        this.options = Collections.unmodifiableList(options);\n\n        // anonymous Argument temporary storage\n        final List newAnonymous = new ArrayList();\n\n        // map (key=trigger & value=Option) temporary storage\n        final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());\n\n        // prefixes temporary storage\n        final Set newPrefixes = new HashSet();\n\n        // process the options\n        for (final Iterator i = options.iterator(); i.hasNext();) {\n            final Option option = (Option) i.next();\n\n            if (option instanceof Argument) {\n                i.remove();\n                newAnonymous.add(option);\n            } else {\n                final Set triggers = option.getTriggers();\n\n                for (Iterator j = triggers.iterator(); j.hasNext();) {\n                    newOptionMap.put(j.next(), option);\n                }\n\n                // store the prefixes\n                newPrefixes.addAll(option.getPrefixes());\n            }\n        }\n\n        this.anonymous = Collections.unmodifiableList(newAnonymous);\n        this.optionMap = Collections.unmodifiableSortedMap(newOptionMap);\n        this.prefixes = Collections.unmodifiableSet(newPrefixes);\n    }", "ReverseStringComparator": "    private ReverseStringComparator() {\n        // just making sure nobody else creates one\n    }"}