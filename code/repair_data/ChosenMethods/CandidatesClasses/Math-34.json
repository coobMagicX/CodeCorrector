{"ListPopulation": "public abstract class ListPopulation implements Population {\n\n    /** List of chromosomes */\n    private List<Chromosome> chromosomes;\n\n    /** maximal size of the population */\n    private int populationLimit;\n\n    /**\n     * Creates a new ListPopulation instance and initializes its inner chromosome list.\n     *\n     * @param populationLimit maximal size of the population\n     * @throws NotPositiveException if the population limit is not a positive number (&lt; 1)\n     */\n    public ListPopulation(final int populationLimit) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Creates a new ListPopulation instance.\n     * <p>Note: the chromosomes of the specified list are added to the population.</p>\n     * @param chromosomes list of chromosomes to be added to the population\n     * @param populationLimit maximal size of the population\n     * @throws NullArgumentException if the list of chromosomes is {@code null}\n     * @throws NotPositiveException if the population limit is not a positive number (&lt; 1)\n     * @throws NumberIsTooLargeException if the list of chromosomes exceeds the population limit\n     */\n    public ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Sets the list of chromosomes.\n     * <p>Note: this method removed all existing chromosomes in the population and adds all chromosomes\n     * of the specified list to the population.</p>\n     * @param chromosomes the list of chromosomes\n     * @throws NullArgumentException if the list of chromosomes is {@code null}\n     * @throws NumberIsTooLargeException if the list of chromosomes exceeds the population limit\n     * @deprecated use {@link #addChromosomes(Collection)} instead\n     */\n    public void setChromosomes(final List<Chromosome> chromosomes) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Add a {@link Collection} of chromosomes to this {@link Population}.\n     * @param chromosomeColl a {@link Collection} of chromosomes\n     * @throws NumberIsTooLargeException if the population would exceed the population limit when\n     * adding this chromosome\n     */\n    public void addChromosomes(final Collection<Chromosome> chromosomeColl) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns an unmodifiable list of the chromosomes in this population.\n     * @return the unmodifiable list of chromosomes\n     */\n    public List<Chromosome> getChromosomes() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Access the list of chromosomes.\n     * @return the list of chromosomes\n     */\n    protected List<Chromosome> getChromosomeList() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Add the given chromosome to the population.\n     * @param chromosome the chromosome to add.\n     * @throws NumberIsTooLargeException if the population would exceed the {@code populationLimit} after\n     * adding this chromosome\n     */\n    public void addChromosome(final Chromosome chromosome) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Access the fittest chromosome in this population.\n     * @return the fittest chromosome.\n     */\n    public Chromosome getFittestChromosome() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Access the maximum population size.\n     * @return the maximum population size.\n     */\n    public int getPopulationLimit() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Sets the maximal population size.\n     * @param populationLimit maximal population size.\n     * @throws NotPositiveException if the population limit is not a positive number (&lt; 1)\n     * @throws NumberIsTooSmallException if the new population size is smaller than the current number\n     * of chromosomes in the population\n     */\n    public void setPopulationLimit(final int populationLimit) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Access the current population size.\n     * @return the current population size.\n     */\n    public int getPopulationSize() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public String toString() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns an iterator over the unmodifiable list of chromosomes.\n     * <p>Any call to {@link Iterator#remove()} will result in a {@link UnsupportedOperationException}.</p>\n     *\n     * @return chromosome iterator\n     */\n    public Iterator<Chromosome> iterator() {\n         //The specific code has been omitted, but there is no error\n        }\n}"}