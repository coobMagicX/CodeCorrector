{"GrayPaintScale": "public class GrayPaintScale \n        implements PaintScale, PublicCloneable, Serializable {\n\n    /** The lower bound. */\n    private double lowerBound;\n    \n    /** The upper bound. */\n    private double upperBound;\n    \n    /**\n     * Creates a new <code>GrayPaintScale</code> instance with default values.\n     */\n    public GrayPaintScale() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /**\n     * Creates a new paint scale for values in the specified range.\n     * \n     * @param lowerBound  the lower bound.\n     * @param upperBound  the upper bound.\n     * \n     * @throws IllegalArgumentException if <code>lowerBound</code> is not\n     *       less than <code>upperBound</code>.\n     */\n    public GrayPaintScale(double lowerBound, double upperBound) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /**\n     * Returns the lower bound.\n     * \n     * @return The lower bound.\n     * \n     * @see #getUpperBound()\n     */\n    public double getLowerBound() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns the upper bound.\n     * \n     * @return The upper bound.\n     * \n     * @see #getLowerBound()\n     */\n    public double getUpperBound() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns a paint for the specified value.\n     * \n     * @param value  the value (must be within the range specified by the\n     *         lower and upper bounds for the scale).\n     * \n     * @return A paint for the specified value.\n     */\n    public Paint getPaint(double value) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /**\n     * Tests this <code>GrayPaintScale</code> instance for equality with an\n     * arbitrary object.  This method returns <code>true</code> if and only\n     * if:\n     * <ul>\n     * <li><code>obj</code> is not <code>null</code>;</li>\n     * <li><code>obj</code> is an instance of <code>GrayPaintScale</code>;</li>\n     * </ul>\n     * \n     * @param obj  the object (<code>null</code> permitted).\n     * \n     * @return A boolean.\n     */\n    public boolean equals(Object obj) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /**\n     * Returns a clone of this <code>GrayPaintScale</code> instance.\n     * \n     * @return A clone.\n     * \n     * @throws CloneNotSupportedException if there is a problem cloning this\n     *     instance.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n    \n}"}