{"NodeUtil": "public final class NodeUtil {\n         //The specific code has been omitted, but there is no error\n        }", "VarCollector": "  private static class VarCollector implements Visitor {\n    final Map<String, Node> vars = Maps.newLinkedHashMap();\n\n    public void visit(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }", "MatchNameNode": "  private static class MatchNameNode implements Predicate<Node>{\n    final String name;\n\n    MatchNameNode(String name){\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean apply(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }", "MatchNodeType": "  static class MatchNodeType implements Predicate<Node>{\n    final int type;\n\n    MatchNodeType(int type){\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean apply(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }", "MatchDeclaration": "  static class MatchDeclaration implements Predicate<Node> {\n    public boolean apply(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }", "MatchNotFunction": "  static class MatchNotFunction implements Predicate<Node>{\n    public boolean apply(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }", "MatchShallowStatement": "  static class MatchShallowStatement implements Predicate<Node>{\n    public boolean apply(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n  }"}