{"DOMNodePointer": "public class DOMNodePointer extends NodePointer {\n\n    private static final long serialVersionUID = -8751046933894857319L;\n    \n    private Node node;\n    private Map namespaces;\n    private String defaultNamespace;\n    private String id;\n\n    public static final String XML_NAMESPACE_URI = \n            \"http://www.w3.org/XML/1998/namespace\";\n    public static final String XMLNS_NAMESPACE_URI = \n            \"http://www.w3.org/2000/xmlns/\";\n\n    public DOMNodePointer(Node node, Locale locale) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public DOMNodePointer(Node node, Locale locale, String id) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public DOMNodePointer(NodePointer parent, Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public boolean testNode(NodeTest test) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public static boolean testNode(Node node, NodeTest test) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private static boolean equalStrings(String s1, String s2) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public QName getName() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getNamespaceURI() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith) \n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator attributeIterator(QName name) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer namespacePointer(String prefix) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator namespaceIterator() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getNamespaceURI(String prefix) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getDefaultNamespaceURI() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getBaseValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getImmediateNode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isActual() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isCollection() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int getLength() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isLeaf() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns true if the xml:lang attribute for the current node\n     * or its parent has the specified prefix <i>lang</i>.\n     * If no node has this prefix, calls <code>super.isLanguage(lang)</code>.\n     */\n    public boolean isLanguage(String lang) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected static String findEnclosingAttribute(Node n, String attrName) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected String getLanguage() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Sets contents of the node to the specified value. If the value is\n     * a String, the contents of the node are replaced with this text.\n     * If the value is an Element or Document, the children of the\n     * node are replaced with the children of the passed node.\n     */\n    public void setValue(Object value) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index) \n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer createChild(JXPathContext context, \n                QName name, int index, Object value)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer createAttribute(JXPathContext context, QName name) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public void remove() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String asPath() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private String escape(String string) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private int getRelativePositionByName() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    private int getRelativePositionOfElement() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private int getRelativePositionOfTextNode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private int getRelativePositionOfPI(String target) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int hashCode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean equals(Object object) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public static String getPrefix(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public static String getLocalName(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public static String getNamespaceURI(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private String stringValue(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Locates a node by ID.\n     */\n    public Pointer getPointerByID(JXPathContext context, String id) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private AbstractFactory getAbstractFactory(JXPathContext context) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int compareChildNodePointers(\n            NodePointer pointer1, NodePointer pointer2)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n}"}