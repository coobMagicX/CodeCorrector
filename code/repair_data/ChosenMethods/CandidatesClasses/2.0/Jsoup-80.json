{"XmlTreeBuilder": "public class XmlTreeBuilder extends TreeBuilder {\n    ParseSettings defaultSettings() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    Document parse(Reader input, String baseUri) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    Document parse(String input, String baseUri) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    protected boolean process(Token token) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private void insertNode(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    Element insert(Token.StartTag startTag) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    void insert(Token.Comment commentToken) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    void insert(Token.Character token) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    void insert(Token.Doctype d) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     */\n    private void popStackToClose(Token.EndTag endTag) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    List<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors, ParseSettings settings) {\n         //The specific code has been omitted, but there is no error\n        }\n}"}