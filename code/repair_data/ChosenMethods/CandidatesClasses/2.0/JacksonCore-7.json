{"JsonWriteContext": "public class JsonWriteContext extends JsonStreamContext\n{\n    // // // Return values for writeValue()\n\n    public final static int STATUS_OK_AS_IS = 0;\n    public final static int STATUS_OK_AFTER_COMMA = 1;\n    public final static int STATUS_OK_AFTER_COLON = 2;\n    public final static int STATUS_OK_AFTER_SPACE = 3; // in root context\n    public final static int STATUS_EXPECT_VALUE = 4;\n    public final static int STATUS_EXPECT_NAME = 5;\n\n    /**\n     * Parent context for this context; null for root context.\n     */\n    protected final JsonWriteContext _parent;\n\n    // // // Optional duplicate detection\n\n    protected DupDetector _dups;\n\n    /*\n    /**********************************************************\n    /* Simple instance reuse slots; speed up things\n    /* a bit (10-15%) for docs with lots of small\n    /* arrays/objects\n    /**********************************************************\n     */\n\n    protected JsonWriteContext _child = null;\n\n    /*\n    /**********************************************************\n    /* Location/state information (minus source reference)\n    /**********************************************************\n     */\n    \n    /**\n     * Name of the field of which value is to be parsed; only\n     * used for OBJECT contexts\n     */\n    protected String _currentName;\n\n    /**\n     * @since 2.5\n     */\n    protected Object _currentValue;\n    \n    /**\n     * Marker used to indicate that we just received a name, and\n     * now expect a value\n     */\n    protected boolean _gotName;\n\n    /*\n    /**********************************************************\n    /* Life-cycle\n    /**********************************************************\n     */\n\n    protected JsonWriteContext(int type, JsonWriteContext parent, DupDetector dups) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected JsonWriteContext reset(int type) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public JsonWriteContext withDupDetector(DupDetector dups) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object getCurrentValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public void setCurrentValue(Object v) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /*\n    /**********************************************************\n    /* Factory methods\n    /**********************************************************\n     */\n\n    /**\n     * @deprecated Since 2.3; use method that takes argument\n     */\n    @Deprecated\n    public static JsonWriteContext createRootContext() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public static JsonWriteContext createRootContext(DupDetector dd) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public JsonWriteContext createChildArrayContext() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public JsonWriteContext createChildObjectContext() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    // // // Shared API\n\n    @Override public final JsonWriteContext getParent() {\n         //The specific code has been omitted, but there is no error\n        }\n    @Override public final String getCurrentName() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public DupDetector getDupDetector() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    // // // API sub-classes are to implement\n\n    /**\n     * Method that writer is to call before it writes a field name.\n     *\n     * @return Index of the field entry (0-based)\n     */\n    public int writeFieldName(String name) throws JsonProcessingException {\n        if (_gotName) {\n         //The specific code has been omitted, but there is no error\n        }\n        _gotName = true;\n        _currentName = name;\n        if (_dups != null) {\n         //The specific code has been omitted, but there is no error\n        }\n        return (_index < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;\n    }\n\n    private final void _checkDup(DupDetector dd, String name) throws JsonProcessingException {\n        if (dd.isDup(name)) { throw new JsonGenerationException(\"Duplicate field '\"+name+\"'\"); }\n    }\n    \n    public int writeValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    // // // Internally used abstract methods\n\n    protected void appendDesc(StringBuilder sb) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    // // // Overridden standard methods\n\n    /**\n     * Overridden to provide developer writeable \"JsonPath\" representation\n     * of the context.\n     */\n    @Override public String toString() {\n         //The specific code has been omitted, but there is no error\n        }\n}"}