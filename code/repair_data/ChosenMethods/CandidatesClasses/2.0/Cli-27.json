{"OptionGroup": "public class OptionGroup implements Serializable\n{\n    private static final long serialVersionUID = 1L;\n    \n    /** hold the options */\n    private Map optionMap = new HashMap();\n\n    /** the name of the selected option */\n    private String selected;\n\n    /** specified whether this group is required */\n    private boolean required;\n\n    /**\n     * Add the specified <code>Option</code> to this group.\n     *\n     * @param option the option to add to this group\n     * @return this option group with the option added\n     */\n    public OptionGroup addOption(Option option)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * @return the names of the options in this group as a \n     * <code>Collection</code>\n     */\n    public Collection getNames()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * @return the options in this group as a <code>Collection</code>\n     */\n    public Collection getOptions()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Set the selected option of this group to <code>name</code>.\n     *\n     * @param option the option that is selected\n     * @throws AlreadySelectedException if an option from this group has \n     * already been selected.\n     */\n    public void setSelected(Option option) throws AlreadySelectedException\n    {\n        if (option == null)\n        {\n         //The specific code has been omitted, but there is no error\n        }\n        \n        // if no option has already been selected or the \n        // same option is being reselected then set the\n        // selected member variable\n        if (selected == null || selected.equals(option.getOpt()))\n        {\n            selected = option.getOpt();\n        }\n        else\n        {\n            throw new AlreadySelectedException(this, option);\n        }\n    }\n\n    /**\n     * @return the selected option name\n     */\n    public String getSelected()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * @param required specifies if this group is required\n     */\n    public void setRequired(boolean required)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns whether this option group is required.\n     *\n     * @return whether this option group is required\n     */\n    public boolean isRequired()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns the stringified version of this OptionGroup.\n     * \n     * @return the stringified representation of this group\n     */\n    public String toString()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n}"}