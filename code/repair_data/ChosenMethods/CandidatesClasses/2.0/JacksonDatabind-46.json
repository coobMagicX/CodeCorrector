{"ReferenceType": "public class ReferenceType extends SimpleType\n{\n    private static final long serialVersionUID = 1L;\n\n    protected final JavaType _referencedType;\n\n    protected ReferenceType(Class<?> cls, JavaType refType,\n            Object valueHandler, Object typeHandler, boolean asStatic)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public static ReferenceType construct(Class<?> cls, JavaType refType,\n            Object valueHandler, Object typeHandler)\n    {\n         //The specific code has been omitted, but there is no error\n        }                                   \n    \n    @Override\n    public ReferenceType withTypeHandler(Object h)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public ReferenceType withContentTypeHandler(Object h)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public ReferenceType withValueHandler(Object h) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public ReferenceType withContentValueHandler(Object h) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public ReferenceType withStaticTyping() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    protected String buildCanonicalName()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Narrow/widen\n    /**********************************************************\n     */\n    \n    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Extended API\n    /**********************************************************\n     */\n    \n    @Override\n    public JavaType getReferencedType() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public boolean isReferenceType() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /*\n    /**********************************************************\n    /* Public API overrides\n    /**********************************************************\n     */\n\n    @Override\n    public int containedTypeCount() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public JavaType containedType(int index) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public String containedTypeName(int index) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> getParameterSource() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public StringBuilder getErasedSignature(StringBuilder sb) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /*\n    /**********************************************************\n    /* Standard methods\n    /**********************************************************\n     */\n\n    @Override\n    public String toString()\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public boolean equals(Object o)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n}"}