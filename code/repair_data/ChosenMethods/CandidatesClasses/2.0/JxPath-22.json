{"DOMNodePointer": "public class DOMNodePointer extends NodePointer {\n\n    private static final long serialVersionUID = -8751046933894857319L;\n\n    private Node node;\n    private Map namespaces;\n    private String defaultNamespace;\n    private String id;\n    private NamespaceResolver localNamespaceResolver;\n\n    /** XML namespace URI */\n    public static final String XML_NAMESPACE_URI =\n            \"http://www.w3.org/XML/1998/namespace\";\n\n    /** XMLNS namespace URI */\n    public static final String XMLNS_NAMESPACE_URI =\n            \"http://www.w3.org/2000/xmlns/\";\n\n    /**\n     * Create a new DOMNodePointer.\n     * @param node pointed at\n     * @param locale Locale\n     */\n    public DOMNodePointer(Node node, Locale locale) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Create a new DOMNodePointer.\n     * @param node pointed at\n     * @param locale Locale\n     * @param id string id\n     */\n    public DOMNodePointer(Node node, Locale locale, String id) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Create a new DOMNodePointer.\n     * @param parent pointer\n     * @param node pointed\n     */\n    public DOMNodePointer(NodePointer parent, Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean testNode(NodeTest test) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Test a Node.\n     * @param node to test\n     * @param test to execute\n     * @return true if node passes test\n     */\n    public static boolean testNode(Node node, NodeTest test) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Test string equality.\n     * @param s1 String 1\n     * @param s2 String 2\n     * @return true if == or .equals()\n     */\n    private static boolean equalStrings(String s1, String s2) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public QName getName() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getNamespaceURI() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator childIterator(NodeTest test, boolean reverse,\n            NodePointer startWith) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator attributeIterator(QName name) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer namespacePointer(String prefix) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodeIterator namespaceIterator() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public synchronized NamespaceResolver getNamespaceResolver() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getNamespaceURI(String prefix) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String getDefaultNamespaceURI() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getBaseValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getImmediateNode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isActual() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isCollection() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int getLength() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean isLeaf() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Returns true if the xml:lang attribute for the current node\n     * or its parent has the specified prefix <i>lang</i>.\n     * If no node has this prefix, calls <code>super.isLanguage(lang)</code>.\n     * @param lang ns to test\n     * @return boolean\n     */\n    public boolean isLanguage(String lang) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Find the nearest occurrence of the specified attribute\n     * on the specified and enclosing elements.\n     * @param n current node\n     * @param attrName attribute name\n     * @return attribute value\n     */\n    protected static String findEnclosingAttribute(Node n, String attrName) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the language attribute for this node.\n     * @return String language name\n     */\n    protected String getLanguage() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Sets contents of the node to the specified value. If the value is\n     * a String, the contents of the node are replaced with this text.\n     * If the value is an Element or Document, the children of the\n     * node are replaced with the children of the passed node.\n     * @param value to set\n     */\n    public void setValue(Object value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer createChild(JXPathContext context, QName name, int index) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer createChild(JXPathContext context, QName name,\n            int index, Object value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public NodePointer createAttribute(JXPathContext context, QName name) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public void remove() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String asPath() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get relative position of this among like-named siblings.\n     * @return 1..n\n     */\n    private int getRelativePositionByQName() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private boolean matchesQName(Node n) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get relative position of this among all siblings.\n     * @return 1..n\n     */\n    private int getRelativePositionOfElement() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the relative position of this among sibling text nodes.\n     * @return 1..n\n     */\n    private int getRelativePositionOfTextNode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the relative position of this among same-target processing instruction siblings.\n     * @return 1..n\n     */\n    private int getRelativePositionOfPI() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int hashCode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean equals(Object object) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get any prefix from the specified node.\n     * @param node the node to check\n     * @return String xml prefix\n     */\n    public static String getPrefix(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the local name of the specified node.\n     * @param node node to check\n     * @return String local name\n     */\n    public static String getLocalName(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the ns uri of the specified node.\n     * @param node Node to check\n     * @return String ns uri\n     */\n    public static String getNamespaceURI(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Object getValue() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Get the string value of the specified node.\n     * @param node Node to check\n     * @return String\n     */\n    private String stringValue(Node node) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Locates a node by ID.\n     * @param context starting context\n     * @param id to find\n     * @return Pointer\n     */\n    public Pointer getPointerByID(JXPathContext context, String id) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public int compareChildNodePointers(NodePointer pointer1,\n            NodePointer pointer2) {\n         //The specific code has been omitted, but there is no error\n        }\n}"}