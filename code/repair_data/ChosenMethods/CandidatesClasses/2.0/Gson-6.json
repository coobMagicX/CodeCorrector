{"JsonAdapterAnnotationTypeAdapterFactory": "public final class JsonAdapterAnnotationTypeAdapterFactory implements TypeAdapterFactory {\n\n  private final ConstructorConstructor constructorConstructor;\n\n  public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @SuppressWarnings(\"unchecked\") // Casts guarded by conditionals.\n  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,\n      TypeToken<?> fieldType, JsonAdapter annotation) {\n         //The specific code has been omitted, but there is no error\n        }\n}"}