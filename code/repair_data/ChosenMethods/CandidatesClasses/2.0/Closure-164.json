{"ArrowType": "final class ArrowType extends JSType {\n  private static final long serialVersionUID = 1L;\n\n  final Node parameters;\n  JSType returnType;\n\n  // Whether the return type is inferred.\n  final boolean returnTypeInferred;\n\n  ArrowType(JSTypeRegistry registry, Node parameters,\n      JSType returnType) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  ArrowType(JSTypeRegistry registry, Node parameters,\n      JSType returnType, boolean returnTypeInferred) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public boolean isSubtype(JSType other) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  /**\n   * @return True if our parameter spec is equal to {@code that}'s parameter\n   *     spec.\n   */\n  boolean hasEqualParameters(ArrowType that) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public boolean isEquivalentTo(JSType object) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public int hashCode() {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public JSType getLeastSupertype(JSType that) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public JSType getGreatestSubtype(JSType that) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public TernaryValue testForEquality(JSType that) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public <T> T visit(Visitor<T> visitor) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  public BooleanLiteralSet getPossibleToBooleanOutcomes() {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope) {\n         //The specific code has been omitted, but there is no error\n        }\n\n  boolean hasUnknownParamsOrReturn() {\n         //The specific code has been omitted, but there is no error\n        }\n\n  @Override\n  String toStringHelper(boolean forAnnotations) {\n         //The specific code has been omitted, but there is no error\n        }\n}"}