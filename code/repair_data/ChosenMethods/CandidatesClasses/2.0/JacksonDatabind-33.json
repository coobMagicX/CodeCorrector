{"JacksonAnnotationIntrospector": "public class JacksonAnnotationIntrospector\n    extends AnnotationIntrospector\n    implements java.io.Serializable\n{\n    private static final long serialVersionUID = 1L;\n\n    public JacksonAnnotationIntrospector() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Version version() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* General annotation properties\n    /**********************************************************\n     */\n\n    /**\n     * Annotations with meta-annotation {@link JacksonAnnotationsInside}\n     * are considered bundles.\n     */\n    @Override\n    public boolean isAnnotationBundle(Annotation ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* General annotations\n    /**********************************************************\n     */\n\n    /**\n     * Since 2.6, we have supported use of {@link JsonProperty} for specifying\n     * explicit serialized name\n     */\n    @Override\n    public String findEnumValue(Enum<?> value)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* General class annotations\n    /**********************************************************\n     */\n\n    @Override\n    public PropertyName findRootName(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    @Deprecated // since 2.6, remove from 2.7 or later\n    public String[] findPropertiesToIgnore(Annotated ac) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override // since 2.6\n    public String[] findPropertiesToIgnore(Annotated ac, boolean forSerialization) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public Boolean findIgnoreUnknownProperties(AnnotatedClass ac) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Boolean isIgnorableType(AnnotatedClass ac) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * @deprecated (since 2.3) Use {@link #findFilterId(Annotated)} instead\n     */\n    @Deprecated\n    @Override\n    public Object findFilterId(AnnotatedClass ac) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public Object findFilterId(Annotated a) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected final Object _findFilterId(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findNamingStrategy(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        } \n\n    /*\n    /**********************************************************\n    /* Property auto-detection\n    /**********************************************************\n     */\n    \n    @Override\n    public VisibilityChecker<?> findAutoDetectVisibility(AnnotatedClass ac,\n        VisibilityChecker<?> checker)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* General member (field, method/constructor) annotations\n    /**********************************************************\n     */\n\n    @Override\n    public String findImplicitPropertyName(AnnotatedMember param) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public boolean hasIgnoreMarker(AnnotatedMember m) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Boolean hasRequiredMarker(AnnotatedMember m)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public JsonProperty.Access findPropertyAccess(Annotated m) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public String findPropertyDescription(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Integer findPropertyIndex(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public String findPropertyDefaultValue(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public JsonFormat.Value findFormat(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override        \n    public ReferenceProperty findReferenceType(AnnotatedMember member)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public NameTransformer findUnwrappingNameTransformer(AnnotatedMember member)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findInjectableValueId(AnnotatedMember m)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?>[] findViews(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Annotations for Polymorphic Type handling\n    /**********************************************************\n     */\n\n    @Override\n    public TypeResolverBuilder<?> findTypeResolver(MapperConfig<?> config,\n            AnnotatedClass ac, JavaType baseType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public TypeResolverBuilder<?> findPropertyTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType baseType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType containerType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public List<NamedType> findSubtypes(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override        \n    public String findTypeName(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Boolean isTypeId(AnnotatedMember member) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Annotations for Object Id handling\n    /**********************************************************\n     */\n\n    @Override\n    public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Serialization: general annotations\n    /**********************************************************\n    */\n\n    @Override\n    public Object findSerializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findKeySerializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findContentSerializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findNullSerializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    @SuppressWarnings(\"deprecation\")\n    public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    @SuppressWarnings(\"deprecation\")\n    public JsonInclude.Value findPropertyInclusion(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findSerializationType(Annotated am)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findSerializationKeyType(Annotated am, JavaType baseType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findSerializationContentType(Annotated am, JavaType baseType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public JsonSerialize.Typing findSerializationTyping(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findSerializationConverter(Annotated a) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findSerializationContentConverter(AnnotatedMember a) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Serialization: class annotations\n    /**********************************************************\n     */\n\n    @Override\n    public String[] findSerializationPropertyOrder(AnnotatedClass ac) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Boolean findSerializationSortAlphabetically(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private final Boolean _findSortAlpha(Annotated ann) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac,\n            List<BeanPropertyWriter> properties) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Attr attr,\n            MapperConfig<?> config, AnnotatedClass ac, JavaType type)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Prop prop,\n            MapperConfig<?> config, AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Serialization: property annotations\n    /**********************************************************\n     */\n\n    @Override\n    public PropertyName findNameForSerialization(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public boolean hasAsValueAnnotation(AnnotatedMethod am) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Deserialization: general annotations\n    /**********************************************************\n     */\n\n    @Override\n    public Object findDeserializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findKeyDeserializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findContentDeserializer(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findDeserializationType(Annotated am, JavaType baseType) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findDeserializationKeyType(Annotated am, JavaType baseKeyType) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findDeserializationConverter(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Object findDeserializationContentConverter(AnnotatedMember a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Deserialization: Class annotations\n    /**********************************************************\n     */\n    \n    @Override\n    public Object findValueInstantiator(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public Class<?> findPOJOBuilder(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    /*\n    /**********************************************************\n    /* Deserialization: property annotations\n    /**********************************************************\n     */\n\n    @Override\n    public PropertyName findNameForDeserialization(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    @Override\n    public boolean hasAnySetterAnnotation(AnnotatedMethod am)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public boolean hasAnyGetterAnnotation(AnnotatedMethod am)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public boolean hasCreatorAnnotation(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    @Override\n    public JsonCreator.Mode findCreatorBinding(Annotated a) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /*\n    /**********************************************************\n    /* Helper methods\n    /**********************************************************\n     */\n\n    protected boolean _isIgnorable(Annotated a)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected Class<?> _classIfExplicit(Class<?> cls) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    protected PropertyName _propertyName(String localName, String namespace) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Helper method called to construct and initialize instance of {@link TypeResolverBuilder}\n     * if given annotated element indicates one is needed.\n     */\n    @SuppressWarnings(\"deprecation\")\n    protected TypeResolverBuilder<?> _findTypeResolver(MapperConfig<?> config,\n            Annotated ann, JavaType baseType)\n    {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Helper method for constructing standard {@link TypeResolverBuilder}\n     * implementation.\n     */\n    protected StdTypeResolverBuilder _constructStdTypeResolverBuilder() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * Helper method for dealing with \"no type info\" marker; can't be null\n     * (as it'd be replaced by default typing)\n     */\n    protected StdTypeResolverBuilder _constructNoTypeResolverBuilder() {\n         //The specific code has been omitted, but there is no error\n        }\n}"}