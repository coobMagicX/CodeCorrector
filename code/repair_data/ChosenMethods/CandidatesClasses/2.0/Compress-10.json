{"ZipFile": "public class ZipFile {\n         //The specific code has been omitted, but there is no error\n        }", "OffsetEntry": "    private static final class OffsetEntry {\n         //The specific code has been omitted, but there is no error\n        }", "BoundedInputStream": "    private class BoundedInputStream extends InputStream {\n        private long remaining;\n        private long loc;\n        private boolean addDummyByte = false;\n\n        BoundedInputStream(long start, long remaining) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        @Override\n        public int read() throws IOException {\n            if (remaining-- <= 0) {\n         //The specific code has been omitted, but there is no error\n        }\n            synchronized (archive) {\n         //The specific code has been omitted, but there is no error\n        }\n        }\n\n        @Override\n        public int read(byte[] b, int off, int len) throws IOException {\n            if (remaining <= 0) {\n         //The specific code has been omitted, but there is no error\n        }\n\n            if (len <= 0) {\n         //The specific code has been omitted, but there is no error\n        }\n\n            if (len > remaining) {\n         //The specific code has been omitted, but there is no error\n        }\n            int ret = -1;\n            synchronized (archive) {\n         //The specific code has been omitted, but there is no error\n        }\n            if (ret > 0) {\n         //The specific code has been omitted, but there is no error\n        }\n            return ret;\n        }\n\n        /**\n         * Inflater needs an extra dummy byte for nowrap - see\n         * Inflater's javadocs.\n         */\n        void addDummy() {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "NameAndComment": "    private static final class NameAndComment {\n         //The specific code has been omitted, but there is no error\n        }"}