{"Entities": "class Entities {\n         //The specific code has been omitted, but there is no error\n        };", "PrimitiveEntityMap": "    static class PrimitiveEntityMap implements EntityMap {\n        private Map mapNameToValue = new HashMap();\n\n        private IntHashMap mapValueToName = new IntHashMap();\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "MapIntMap": "    static abstract class MapIntMap implements Entities.EntityMap {\n        protected Map mapNameToValue;\n\n        protected Map mapValueToName;\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "HashEntityMap": "    static class HashEntityMap extends MapIntMap {\n        /**\n         * Constructs a new instance of <code>HashEntityMap</code>.\n         */\n        public HashEntityMap() {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "TreeEntityMap": "    static class TreeEntityMap extends MapIntMap {\n        /**\n         * Constructs a new instance of <code>TreeEntityMap</code>.\n         */\n        public TreeEntityMap() {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "LookupEntityMap": "    static class LookupEntityMap extends PrimitiveEntityMap {\n        private String[] lookupTable;\n\n        private int LOOKUP_TABLE_SIZE = 256;\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * <p>\n         * Returns the lookup table for this entity map. The lookup table is created if it has not been previously.\n         * </p>\n         * \n         * @return the lookup table\n         */\n        private String[] lookupTable() {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * <p>\n         * Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names.\n         * </p>\n         */\n        private void createLookupTable() {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "ArrayEntityMap": "    static class ArrayEntityMap implements EntityMap {\n        protected int growBy = 100;\n\n        protected int size = 0;\n\n        protected String[] names;\n\n        protected int[] values;\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>.\n         */\n        public ArrayEntityMap() {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the array should\n         * grow.\n         * \n         * @param growBy\n         *            array will be initialized to and will grow by this amount\n         */\n        public ArrayEntityMap(int growBy) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * Verifies the capacity of the entity array, adjusting the size if necessary.\n         * \n         * @param capacity\n         *            size the array should be\n         */\n        protected void ensureCapacity(int capacity) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n         //The specific code has been omitted, but there is no error\n        }\n    }", "BinaryEntityMap": "    static class BinaryEntityMap extends ArrayEntityMap {\n\n        /**\n         * Constructs a new instance of <code>BinaryEntityMap</code>.\n         */\n        public BinaryEntityMap() {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the underlying array\n         * should grow.\n         * \n         * @param growBy\n         *            array will be initialized to and will grow by this amount\n         */\n        public BinaryEntityMap(int growBy) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * Performs a binary search of the entity array for the specified key. This method is based on code in\n         * {@link java.util.Arrays}.\n         * \n         * @param key\n         *            the key to be found\n         * @return the index of the entity array matching the specified key\n         */\n        private int binarySearch(int key) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n         //The specific code has been omitted, but there is no error\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n         //The specific code has been omitted, but there is no error\n        }\n    }"}