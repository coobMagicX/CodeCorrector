{"InvocationMatcher": "public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyInvocation, CapturesArgumensFromInvocation, Serializable {\n\n    private static final long serialVersionUID = -3047126096857467610L;\n    private final Invocation invocation;\n    private final List<Matcher> matchers;\n\n    public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public InvocationMatcher(Invocation invocation) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public Method getMethod() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public Invocation getInvocation() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public List<Matcher> getMatchers() {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public String toString() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean matches(Invocation actual) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    private boolean safelyArgumentsMatch(Object[] actualArgs) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    /**\n     * similar means the same method name, same mock, unverified \n     * and: if arguments are the same cannot be overloaded\n     */\n    public boolean hasSimilarMethod(Invocation candidate) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public boolean hasSameMethod(Invocation candidate) {\n         //The specific code has been omitted, but there is no error\n        }\n    \n    public Location getLocation() {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public String toString(PrintSettings printSettings) {\n         //The specific code has been omitted, but there is no error\n        }\n\n    public void captureArgumentsFrom(Invocation i) {\n         //The specific code has been omitted, but there is no error\n        }\n}"}