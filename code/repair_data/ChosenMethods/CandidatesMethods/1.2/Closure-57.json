{"extractClassNameIfProvide": "  public String extractClassNameIfProvide(Node node, Node parent){\n    return extractClassNameIfGoog(node, parent, \"goog.provide\");\n  }", "extractClassNameIfRequire": "  public String extractClassNameIfRequire(Node node, Node parent){\n    return extractClassNameIfGoog(node, parent, \"goog.require\");\n  }", "extractClassNameIfGoog": "  private static String extractClassNameIfGoog(Node node, Node parent,\n      String functionName){\n    String className = null;\n    if (NodeUtil.isExprCall(parent)) {\n      Node callee = node.getFirstChild();\n      if (callee != null && callee.getType() == Token.GETPROP) {\n        String qualifiedName = callee.getQualifiedName();\n        if (functionName.equals(qualifiedName)) {\n          Node target = callee.getNext();\n          if (target != null) {\n            className = target.getString();\n          }\n        }\n      }\n    }\n    return className;\n  }", "getSingletonGetterClassName": "  public String getSingletonGetterClassName(Node callNode) {\n    Node callArg = callNode.getFirstChild();\n    String callName = callArg.getQualifiedName();\n\n    // Use both the original name and the post-CollapseProperties name.\n    if (!(\"goog.addSingletonGetter\".equals(callName) ||\n          \"goog$addSingletonGetter\".equals(callName)) ||\n        callNode.getChildCount() != 2) {\n      return null;\n    }\n\n    return callArg.getNext().getQualifiedName();\n  }"}