{"getWeek": "    public int getWeek() {\n        return this.week;\n    }", "peg": "    public void peg(Calendar calendar) {\n        this.firstMillisecond = getFirstMillisecond(calendar);\n        this.lastMillisecond = getLastMillisecond(calendar);\n    }", "previous": "    public RegularTimePeriod previous() {\n\n        Week result;\n        if (this.week != FIRST_WEEK_IN_YEAR) {\n            result = new Week(this.week - 1, this.year);\n        }\n        else {\n            // we need to work out if the previous year has 52 or 53 weeks...\n            if (this.year > 1900) {\n                int yy = this.year - 1;\n                Calendar prevYearCalendar = Calendar.getInstance();\n                prevYearCalendar.set(yy, Calendar.DECEMBER, 31);\n                result = new Week(prevYearCalendar.getActualMaximum(\n                        Calendar.WEEK_OF_YEAR), yy);\n            }\n            else {\n                result = null;\n            }\n        }\n        return result;\n\n    }", "next": "    public RegularTimePeriod next() {\n\n        Week result;\n        if (this.week < 52) {\n            result = new Week(this.week + 1, this.year);\n        }\n        else {\n            Calendar calendar = Calendar.getInstance();\n            calendar.set(this.year, Calendar.DECEMBER, 31);\n            int actualMaxWeek\n                = calendar.getActualMaximum(Calendar.WEEK_OF_YEAR);\n            if (this.week < actualMaxWeek) {\n                result = new Week(this.week + 1, this.year);\n            }\n            else {\n                if (this.year < 9999) {\n                    result = new Week(FIRST_WEEK_IN_YEAR, this.year + 1);\n                }\n                else {\n                    result = null;\n                }\n            }\n        }\n        return result;\n\n    }", "equals": "    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Week)) {\n            return false;\n        }\n        Week that = (Week) obj;\n        if (this.week != that.week) {\n            return false;\n        }\n        if (this.year != that.year) {\n            return false;\n        }\n        return true;\n\n    }", "parseWeek": "    public static Week parseWeek(String s) {\n\n        Week result = null;\n        if (s != null) {\n\n            // trim whitespace from either end of the string\n            s = s.trim();\n\n            int i = Week.findSeparator(s);\n            if (i != -1) {\n                String s1 = s.substring(0, i).trim();\n                String s2 = s.substring(i + 1, s.length()).trim();\n\n                Year y = Week.evaluateAsYear(s1);\n                int w;\n                if (y != null) {\n                    w = Week.stringToWeek(s2);\n                    if (w == -1) {\n                        throw new TimePeriodFormatException(\n                                \"Can't evaluate the week.\");\n                    }\n                    result = new Week(w, y);\n                }\n                else {\n                    y = Week.evaluateAsYear(s2);\n                    if (y != null) {\n                        w = Week.stringToWeek(s1);\n                        if (w == -1) {\n                            throw new TimePeriodFormatException(\n                                    \"Can't evaluate the week.\");\n                        }\n                        result = new Week(w, y);\n                    }\n                    else {\n                        throw new TimePeriodFormatException(\n                                \"Can't evaluate the year.\");\n                    }\n                }\n\n            }\n            else {\n                throw new TimePeriodFormatException(\n                        \"Could not find separator.\");\n            }\n\n        }\n        return result;\n\n    }", "stringToWeek": "    private static int stringToWeek(String s) {\n\n        int result = -1;\n        s = s.replace('W', ' ');\n        s = s.trim();\n        try {\n            result = Integer.parseInt(s);\n            if ((result < 1) || (result > LAST_WEEK_IN_YEAR)) {\n                result = -1;\n            }\n        }\n        catch (NumberFormatException e) {\n            // suppress\n        }\n        return result;\n\n    }"}