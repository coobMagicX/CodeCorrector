{"getKeys": "    public K[] getKeys() {\n        return keys.clone();\n    }", "size": "    public int size() {\n        return keys.length;\n    }", "equals": "    public boolean equals(final Object other) {\n        if (other == this) {\n            return true;\n        }\n        if (other instanceof MultiKey) {\n            final MultiKey<?> otherMulti = (MultiKey<?>) other;\n            return Arrays.equals(keys, otherMulti.keys);\n        }\n        return false;\n    }", "calculateHashCode": "    private void calculateHashCode(final Object[] keys)\n    {\n        int total = 0;\n        for (final Object key : keys) {\n            if (key != null) {\n                total ^= key.hashCode();\n            }\n        }\n        hashCode = total;\n    }", "readResolve": "    private Object readResolve() {\n        calculateHashCode(keys);\n        return this;\n    }"}