{"construct": "    public static ReferenceType construct(Class<?> cls, JavaType refType,\n            Object valueHandler, Object typeHandler)\n    {\n        return new ReferenceType(cls, refType, null, null, false);\n    }                                   ", "_narrow": "    protected JavaType _narrow(Class<?> subclass)\n    {\n        // Should we check that there is a sub-class relationship?\n        return new ReferenceType(subclass, _referencedType,\n                _valueHandler, _typeHandler, _asStatic);\n    }", "getGenericSignature": "    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n        _classSignature(_class, sb, false);\n        sb.append('<');\n        sb = _referencedType.getGenericSignature(sb);\n        sb.append(';');\n        return sb;\n    }", "equals": "    public boolean equals(Object o)\n    {\n        if (o == this) return true;\n        if (o == null) return false;\n        if (o.getClass() != getClass()) return false;\n\n        ReferenceType other = (ReferenceType) o;\n\n        if (other._class != _class) return false;\n        \n        // Otherwise actually mostly worry about referenced type\n        return _referencedType.equals(other._referencedType);\n    }"}