{"isSafeReplacement": "  private boolean isSafeReplacement(Node node, Node replacement) {\n    // No checks are needed for simple names.\n    if (node.isName()) {\n      return true;\n    }\n    Preconditions.checkArgument(node.isGetProp());\n\n      node = node.getFirstChild();\n    if (node.isName()\n        && isNameAssignedTo(node.getString(), replacement)) {\n      return false;\n    }\n\n    return true;\n  }", "isNameAssignedTo": "  private boolean isNameAssignedTo(String name, Node node) {\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n      if (isNameAssignedTo(name, c)) {\n        return true;\n      }\n    }\n\n    if (node.isName()) {\n      Node parent = node.getParent();\n      if (parent.isAssign() && parent.getFirstChild() == node) {\n        if (name.equals(node.getString())) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }"}