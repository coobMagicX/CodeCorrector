{"setChromosomes": "    public void setChromosomes(final List<Chromosome> chromosomes) {\n        if (chromosomes == null) {\n            throw new NullArgumentException();\n        }\n        if (chromosomes.size() > populationLimit) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,\n                                                chromosomes.size(), populationLimit, false);\n        }\n        this.chromosomes.clear();\n        this.chromosomes.addAll(chromosomes);\n    }", "addChromosomes": "    public void addChromosomes(final Collection<Chromosome> chromosomeColl) {\n        if (chromosomes.size() + chromosomeColl.size() > populationLimit) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,\n                                                chromosomes.size(), populationLimit, false);\n        }\n        this.chromosomes.addAll(chromosomeColl);\n    }", "getChromosomes": "    public List<Chromosome> getChromosomes() {\n        return Collections.unmodifiableList(chromosomes);\n    }", "getChromosomeList": "    protected List<Chromosome> getChromosomeList() {\n        return chromosomes;\n    }", "addChromosome": "    public void addChromosome(final Chromosome chromosome) {\n        if (chromosomes.size() >= populationLimit) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,\n                                                chromosomes.size(), populationLimit, false);\n        }\n        this.chromosomes.add(chromosome);\n    }", "getFittestChromosome": "    public Chromosome getFittestChromosome() {\n        // best so far\n        Chromosome bestChromosome = this.chromosomes.get(0);\n        for (Chromosome chromosome : this.chromosomes) {\n            if (chromosome.compareTo(bestChromosome) > 0) {\n                // better chromosome found\n                bestChromosome = chromosome;\n            }\n        }\n        return bestChromosome;\n    }", "iterator": "    public Iterator<Chromosome> iterator() {\n        return chromosomes.iterator();\n    }"}