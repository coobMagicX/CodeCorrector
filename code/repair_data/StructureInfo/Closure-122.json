{"Class": ["IRFactory", "TransformDispatcher"], "Constructor": ["IRFactory"], "Method": ["createTemplateNode", "transformTree", "setFileOverviewJsDoc", "transformBlock", "handleBlockComment", "handlePossibleFileOverviewJsDoc", "handleJsDoc", "validateTypeAnnotations", "isPropAccess", "isExprStmt", "transform", "maybeInjectCastNode", "transformParameter", "transformNameAsString", "transformNumberAsString", "getStringValue", "setSourceInfo", "createJsDocInfoParser", "parseInlineTypeDoc", "maybeSetLengthFrom", "position2charno", "justTransform", "processGeneric", "transformAsString", "processArrayLiteral", "processAssignment", "processAstRoot", "parseDirectives", "isDirective", "processBlock", "processBreakStatement", "processCatchClause", "processConditionalExpression", "processContinueStatement", "processDoLoop", "processElementGet", "processEmptyExpression", "processEmptyStatement", "processExpressionStatement", "processForInLoop", "processForLoop", "processFunctionCall", "processFunctionNode", "processIfStatement", "processInfixExpression", "processKeywordLiteral", "processLabel", "processLabeledStatement", "processName", "isAllowedProp", "isReservedKeyword", "processNewExpression", "processNumberLiteral", "processObjectLiteral", "getFnParamNode", "processObjectProperty", "processParenthesizedExpression", "processPropertyGet", "processRegExpLiteral", "processReturnStatement", "processScope", "processStringLiteral", "processSwitchCase", "processSwitchStatement", "processThrowStatement", "processTryStatement", "processUnaryExpression", "validAssignmentTarget", "processVariableDeclaration", "processVariableInitializer", "processWhileLoop", "processWithStatement", "processIllegalToken", "reportDestructuringAssign", "reportGetter", "reportSetter", "reportGetterParam", "reportSetterParam", "transformTokenType", "newNode", "newStringNode", "newNumberNode"], "Overloaded": {"createTemplateNode": [["createTemplateNode", 0]], "transformTree": [["transformTree", 5]], "setFileOverviewJsDoc": [["setFileOverviewJsDoc", 1]], "transformBlock": [["transformBlock", 1]], "handleBlockComment": [["handleBlockComment", 1]], "handlePossibleFileOverviewJsDoc": [["handlePossibleFileOverviewJsDoc", 1], ["handlePossibleFileOverviewJsDoc", 2]], "handleJsDoc": [["handleJsDoc", 2]], "validateTypeAnnotations": [["validateTypeAnnotations", 2]], "isPropAccess": [["isPropAccess", 1]], "isExprStmt": [["isExprStmt", 1]], "transform": [["transform", 1]], "maybeInjectCastNode": [["maybeInjectCastNode", 3]], "transformParameter": [["transformParameter", 1]], "transformNameAsString": [["transformNameAsString", 1]], "transformNumberAsString": [["transformNumberAsString", 1]], "getStringValue": [["getStringValue", 1]], "setSourceInfo": [["setSourceInfo", 2]], "createJsDocInfoParser": [["createJsDocInfoParser", 2]], "parseInlineTypeDoc": [["parseInlineTypeDoc", 2]], "maybeSetLengthFrom": [["maybeSetLengthFrom", 2]], "position2charno": [["position2charno", 1]], "justTransform": [["justTransform", 1]], "processGeneric": [["processGeneric", 1]], "transformAsString": [["transformAsString", 1]], "processArrayLiteral": [["processArrayLiteral", 1]], "processAssignment": [["processAssignment", 1]], "processAstRoot": [["processAstRoot", 1]], "parseDirectives": [["parseDirectives", 1]], "isDirective": [["isDirective", 1]], "processBlock": [["processBlock", 1]], "processBreakStatement": [["processBreakStatement", 1]], "processCatchClause": [["processCatchClause", 1]], "processConditionalExpression": [["processConditionalExpression", 1]], "processContinueStatement": [["processContinueStatement", 1]], "processDoLoop": [["processDoLoop", 1]], "processElementGet": [["processElementGet", 1]], "processEmptyExpression": [["processEmptyExpression", 1]], "processEmptyStatement": [["processEmptyStatement", 1]], "processExpressionStatement": [["processExpressionStatement", 1]], "processForInLoop": [["processForInLoop", 1]], "processForLoop": [["processForLoop", 1]], "processFunctionCall": [["processFunctionCall", 1]], "processFunctionNode": [["processFunctionNode", 1]], "processIfStatement": [["processIfStatement", 1]], "processInfixExpression": [["processInfixExpression", 1]], "processKeywordLiteral": [["processKeywordLiteral", 1]], "processLabel": [["processLabel", 1]], "processLabeledStatement": [["processLabeledStatement", 1]], "processName": [["processName", 1], ["processName", 2]], "isAllowedProp": [["isAllowedProp", 1]], "isReservedKeyword": [["isReservedKeyword", 1]], "processNewExpression": [["processNewExpression", 1]], "processNumberLiteral": [["processNumberLiteral", 1]], "processObjectLiteral": [["processObjectLiteral", 1]], "getFnParamNode": [["getFnParamNode", 1]], "processObjectProperty": [["processObjectProperty", 1]], "processParenthesizedExpression": [["processParenthesizedExpression", 1]], "processPropertyGet": [["processPropertyGet", 1]], "processRegExpLiteral": [["processRegExpLiteral", 1]], "processReturnStatement": [["processReturnStatement", 1]], "processScope": [["processScope", 1]], "processStringLiteral": [["processStringLiteral", 1]], "processSwitchCase": [["processSwitchCase", 1]], "processSwitchStatement": [["processSwitchStatement", 1]], "processThrowStatement": [["processThrowStatement", 1]], "processTryStatement": [["processTryStatement", 1]], "processUnaryExpression": [["processUnaryExpression", 1]], "validAssignmentTarget": [["validAssignmentTarget", 1]], "processVariableDeclaration": [["processVariableDeclaration", 1]], "processVariableInitializer": [["processVariableInitializer", 1]], "processWhileLoop": [["processWhileLoop", 1]], "processWithStatement": [["processWithStatement", 1]], "processIllegalToken": [["processIllegalToken", 1]], "reportDestructuringAssign": [["reportDestructuringAssign", 1]], "reportGetter": [["reportGetter", 1]], "reportSetter": [["reportSetter", 1]], "reportGetterParam": [["reportGetterParam", 1]], "reportSetterParam": [["reportSetterParam", 1]], "transformTokenType": [["transformTokenType", 1]], "newNode": [["newNode", 1], ["newNode", 2], ["newNode", 3], ["newNode", 4]], "newStringNode": [["newStringNode", 1], ["newStringNode", 2]], "newNumberNode": [["newNumberNode", 1]]}}