{"Class": ["PeepholeSubstituteAlternateSyntax"], "Constructor": ["PeepholeSubstituteAlternateSyntax"], "Method": ["optimizeSubtree", "tryJoinForCondition", "tryFoldSimpleFunctionCall", "tryFoldImmediateCallToBoundFunction", "addParameterAfter", "trySplitComma", "tryReplaceIf", "statementMustExitParent", "tryReplaceUndefined", "tryReduceReturn", "tryReplaceExitWithBreak", "tryRemoveRedundantExit", "isPure", "skipFinallyNodes", "areMatchingExits", "isExceptionPossible", "getExceptionHandler", "tryMinimizeNot", "tryMinimizeIf", "tryRemoveRepeatedStatements", "isFoldableExpressBlock", "getBlockExpression", "isReturnBlock", "isReturnExpressBlock", "isReturnExpression", "getBlockReturnExpression", "isVarBlock", "getBlockVar", "consumesDanglingElse", "isLowerPrecedenceInExpression", "isLowerPrecedence", "isHigherPrecedence", "isPropertyAssignmentInExpression", "tryMinimizeCondition", "maybeReplaceChildWithNumber", "tryFoldStandardConstructors", "tryFoldLiteralConstructor", "isSafeToFoldArrayConstructor", "tryFoldRegularExpressionConstructor", "reduceTrueFalse", "tryMinimizeArrayLiteral", "tryMinimizeStringArrayLiteral", "pickDelimiter", "areValidRegexpFlags", "areSafeFlagsToFold", "makeForwardSlashBracketSafe", "containsUnicodeEscape"], "Overloaded": {"optimizeSubtree": [["optimizeSubtree", 1]], "tryJoinForCondition": [["tryJoinForCondition", 1]], "tryFoldSimpleFunctionCall": [["tryFoldSimpleFunctionCall", 1]], "tryFoldImmediateCallToBoundFunction": [["tryFoldImmediateCallToBoundFunction", 1]], "addParameterAfter": [["addParameterAfter", 2]], "trySplitComma": [["trySplitComma", 1]], "tryReplaceIf": [["tryReplaceIf", 1]], "statementMustExitParent": [["statementMustExitParent", 1]], "tryReplaceUndefined": [["tryReplaceUndefined", 1]], "tryReduceReturn": [["tryReduceReturn", 1]], "tryReplaceExitWithBreak": [["tryReplaceExitWithBreak", 1]], "tryRemoveRedundantExit": [["tryRemoveRedundantExit", 1]], "isPure": [["isPure", 1]], "skipFinallyNodes": [["skipFinallyNodes", 1]], "areMatchingExits": [["areMatchingExits", 2]], "isExceptionPossible": [["isExceptionPossible", 1]], "getExceptionHandler": [["getExceptionHandler", 1]], "tryMinimizeNot": [["tryMinimizeNot", 1]], "tryMinimizeIf": [["tryMinimizeIf", 1]], "tryRemoveRepeatedStatements": [["tryRemoveRepeatedStatements", 1]], "isFoldableExpressBlock": [["isFoldableExpressBlock", 1]], "getBlockExpression": [["getBlockExpression", 1]], "isReturnBlock": [["isReturnBlock", 1]], "isReturnExpressBlock": [["isReturnExpressBlock", 1]], "isReturnExpression": [["isReturnExpression", 1]], "getBlockReturnExpression": [["getBlockReturnExpression", 1]], "isVarBlock": [["isVarBlock", 1]], "getBlockVar": [["getBlockVar", 1]], "consumesDanglingElse": [["consumesDanglingElse", 1]], "isLowerPrecedenceInExpression": [["isLowerPrecedenceInExpression", 2]], "isLowerPrecedence": [["isLowerPrecedence", 2]], "isHigherPrecedence": [["isHigherPrecedence", 2]], "isPropertyAssignmentInExpression": [["isPropertyAssignmentInExpression", 1]], "tryMinimizeCondition": [["tryMinimizeCondition", 1]], "maybeReplaceChildWithNumber": [["maybeReplaceChildWithNumber", 3]], "tryFoldStandardConstructors": [["tryFoldStandardConstructors", 1]], "tryFoldLiteralConstructor": [["tryFoldLiteralConstructor", 1]], "isSafeToFoldArrayConstructor": [["isSafeToFoldArrayConstructor", 1]], "tryFoldRegularExpressionConstructor": [["tryFoldRegularExpressionConstructor", 1]], "reduceTrueFalse": [["reduceTrueFalse", 1]], "tryMinimizeArrayLiteral": [["tryMinimizeArrayLiteral", 1]], "tryMinimizeStringArrayLiteral": [["tryMinimizeStringArrayLiteral", 1]], "pickDelimiter": [["pickDelimiter", 1]], "areValidRegexpFlags": [["areValidRegexpFlags", 1]], "areSafeFlagsToFold": [["areSafeFlagsToFold", 1]], "makeForwardSlashBracketSafe": [["makeForwardSlashBracketSafe", 1]], "containsUnicodeEscape": [["containsUnicodeEscape", 1]]}}