private StringBuffer appendQuotedString(String pattern, ParsePosition pos, StringBuffer appendTo, boolean escapingOn) {
    int start = pos.getIndex();
    char[] c = pattern.toCharArray();
    if (escapingOn && c[start] == QUOTE) {
        pos.setIndex(start + 1); // Move past the initial quote
        return appendTo == null ? null : appendTo.append(QUOTE);
    }
    int lastHold = start;
    for (int i = start; i < pattern.length(); i++) {
        if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
            appendTo.append(c, lastHold, i - lastHold); // Append the text up to the escape sequence
            appendTo.append(QUOTE); // Append the quote symbol
            i += ESCAPED_QUOTE.length() - 1; // Move past the escape sequence
            pos.setIndex(i + 1); // Update the position
            lastHold = i + 1; // Update lastHold to new position after the escaped quote
            continue;
        }
        if (c[i] == QUOTE) {
            if (escapingOn) {
                pos.setIndex(i + 1); // Correctly move past the closing quote
            } else {
                pos.setIndex(i); // Do not consume the quote in non-escaping mode
            }
            return appendTo == null ? null : appendTo.append(c, lastHold, i - lastHold);
        }
    }
    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
}