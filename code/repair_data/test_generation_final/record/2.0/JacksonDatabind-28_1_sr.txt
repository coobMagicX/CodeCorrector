public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
    if (p.getCurrentToken() == JsonToken.START_OBJECT) {
        p.nextToken(); // Move to the first key of the object or end of the object if empty
        if (p.getCurrentToken() == JsonToken.END_OBJECT) {
            return ctxt.getNodeFactory().objectNode(); // Return an empty ObjectNode if the object is empty
        }
        return deserializeObject(p, ctxt, ctxt.getNodeFactory());
    }
    // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
    // if caller has advanced to the first token of Object, but for empty Object
    if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.END_OBJECT) {
        if (p.getCurrentToken() == JsonToken.END_OBJECT) {
            return ctxt.getNodeFactory().objectNode(); // Handle case where we start with an END_OBJECT token
        }
        return deserializeObject(p, ctxt, ctxt.getNodeFactory());
    }
    throw ctxt.mappingException(ObjectNode.class);
}