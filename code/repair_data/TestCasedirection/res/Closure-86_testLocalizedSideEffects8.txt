Intent: The test case `testLocalizedSideEffects8` intends to verify that a local object, which has been modified, is recognized as having no global side effects when returned from a function. This is to ensure that the function correctly identifies local changes and does not confuse them with modifications that might affect global state or lead to unexpected side effects.

Repair strategy: The source code needs to be modified to correctly handle cases where a new object, created locally within a function, is modified (e.g., properties are added or changed) and then returned. The `Token.NEW` case in the `evaluatesToLocalValue` function likely needs an enhancement to check not only if the object is new but also if any of its properties have been altered post-creation. The repair should include identifying newly created objects that are modified and ensuring these modifications are recognized as local (contained within the function scope) without affecting the global state. This might involve tracking changes to object properties and ensuring that such changes are considered local if they occur within the same function scope where the object was created.